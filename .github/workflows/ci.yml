# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:

    # https://github.com/actions/checkout
    - uses: actions/checkout@v5

    # https://github.com/actions/setup-go
    - name: set up go
      uses: actions/setup-go@v6
      with:
        go-version: "1.24.x"
        check-latest: true
        cache: false

    # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions
    # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions#environment-files
    - id: go_version
      name: Get Go version
      run: |
        GO_VER=$(go env GOVERSION | cut -d. -f1-2)
        echo "Detected Go version: ${GO_VER}"
        echo "GO_VER=${GO_VER}" >> "$GITHUB_OUTPUT"

    # https://github.com/actions/cache
    - name: cache tools
      id: cache-tools
      uses: actions/cache@v4
      with:
        path: |
          .tools/
          ~/.cache/go-build
          ~/go/pkg
        key: ci-tools-${{ runner.os }}-${{ runner.arch }}-${{ steps.go_version.outputs.GO_VER }}-${{ hashFiles('**/go.mod', '**/go.sum', '**/Makefile', 'tools/tools.mk', '.github/workflows/ci.yml') }}
        restore-keys: |
          ci-tools-${{ runner.os }}-${{ runner.arch }}-${{ steps.go_version.outputs.GO_VER }}

    - name: install tools
      # if: steps.cache-tools.outputs.cache-hit != 'true'
      run: make tools

    - name: env
      run: |
        make --version
        echo ""
        make env

    - name: check shell files
      run: make ci-sh

    - name: make mod
      run: make ci-mod

    - name: format and check
      run: make ci-format

    - name: staticcheck
      run: make staticcheck

    - name: golangci-lint
      run: make golangci-lint

  tests:
    name: Tests
    strategy:
      matrix:
        go-version: [ '1.24', '1.25' ]
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        include:
          - os: 'ubuntu-latest'
            go-version: '1.25'
            cover: true

    runs-on: "${{ matrix.os }}"
    steps:
      # https://github.com/actions/checkout
    - uses: actions/checkout@v5

    # https://github.com/actions/setup-go
    - name: set up go
      uses: actions/setup-go@v6
      with:
        go-version: "${{ matrix.go-version }}.x"
        check-latest: true
        cache: false

    - name: test
      run: |
        go test -timeout 30s ./...
      if: ${{ !matrix.cover }}

    - name: test with cover and race
      run: |
        go test -timeout 30s -race -coverprofile=coverage.txt -covermode=atomic ./...
      if: ${{ matrix.cover }}

    # https://github.com/codecov/codecov-action
    - name: upload coverage reports to codecov
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      if: ${{ matrix.cover }}
